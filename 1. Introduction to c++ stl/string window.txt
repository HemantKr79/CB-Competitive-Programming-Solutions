#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
using namespace std;

bool compare(string s1,string s2) {
	return s1.length() < s2.length();
}

int find(string s1,char ch) {
	for(int i=0;i<s1.length();i++) {
		if(s1[i] == ch) {
			return i;
		}
	}
	return -1;
}

vector<string> substring(string s) {
	if(s.length() == 0) {
		vector<string> v;
		v.push_back("");
		return v;
	}
	vector<string> v = substring(s.substr(1));
	for(int i=1;i<=s.length();i++) {
		v.push_back(s.substr(0,i));
	}
	return v;
}

void string_window(string s1,string s2) {
	if(s1.length() < s2.length()) {
		cout<<"No string";
		return;
	}
	bool isPresent = true;
	vector<string> v = substring(s1);
	sort(v.begin(),v.end(),compare);
	for(int i=0;i<v.size();i++) {
		string s = v.at(i);
		for(int j=0;j<s2.length();j++) {
			if(find(s,s2[j]) == -1) {
				isPresent = false;
				break;
			}
		}
		if(isPresent == true) {
			cout<<s;
			break;
		}
		isPresent = true;
	}
	if(isPresent == false) {
		cout<<"No string";
	}
}

int main() {
	string s1,s2;
	getline(cin,s1);
	getline(cin,s2);
	string_window(s1,s2);
	return 0;
}
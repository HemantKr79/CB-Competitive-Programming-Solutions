#include<iostream>
#include<queue>
using namespace std;

class Car {
public:
    int id,x,y;
    Car(int id,int x,int y) {
        this->id = id;
        this->x = x;
        this->y = y;
    }
    int dist() {
        return x*x + y*y;
    }
    void display() {
        cout<<"ID: "<<id<<endl;
        cout<<"x: "<<x<<endl;
        cout<<"y: "<<y<<endl;
        cout<<"dist: "<<dist()<<endl;
    }
};

class CarCompare {
public:
    bool operator()(Car c1,Car c2) {
        return c1.dist() > c2.dist();
    }
};

int main() {
    priority_queue<Car,vector<Car>,CarCompare> pq;
    int x[] = {3,5,2,3,6,32,6,4};
    int y[] = {6,32,6,3,6,7,1,0};
    int n = sizeof(x)/sizeof(int);
    for(int i=0;i<n;i++) {
        Car obj(i,x[i],y[i]);
        pq.push(obj);
    }
    int k;
    cin>>k;
    for(int i=0;i<k;i++) {
        Car obj = pq.top();
        obj.display();
        cout<<endl;
        pq.pop();
    }
    return 0;
}
